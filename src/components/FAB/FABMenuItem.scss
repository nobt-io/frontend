@import "~react-toolbox/lib/button/config";

$fabItemMargin: 1rem;
$maxFabItems: 5;

/**
 * This hides the corresponding item.
 * Note that we are selecting the item that this mixin is applied to (&-selector).
 */
@mixin hideFabItem($n) {
  &:nth-child(#{$n}) {
    transform: translateY(100% * $n) + translateY($n * $fabItemMargin);
  }
}

.fabItemContainer {

  margin-bottom: $fabItemMargin;

  @include animateHide(transform);

  // By default, all items are hidden.
  @for $i from 0 to $maxFabItems {
    @include hideFabItem($i)
  }

  &.expanded {
    // Once they are expanded, don't transform them at all, means they will be shown to the user.
    transform: none;
    @include animateShow(transform);

    // If we are expanded, show the button labels!
    .fabItemLabel {
      opacity: 100;

      @include animateHide(opacity);
    }
  }

  // The item itself consists of a label and a button, organized through a flex-box.
  display: flex;
  flex-direction: row;
  align-items: center;

  .fabItemLabel {
    opacity: 0; // Initially, don't show the labels.

    // Labels need to be positioned absolute in order to not interfere with the button's position.
    position: absolute;
    white-space: nowrap;
    right: 7rem;

    color: $color-accent-dark;
    background-color: $color-primary;
    border-radius: $container-border-radius * 2;
    padding: 0.3rem 0.6rem;

    @include animateShow(opacity);

    &.disabled {
      color: $button-disabled-text-color;
      background-color: $button-disabled-background-color;
    }
  }
}

.itemButton {
  box-shadow: 0 0 4px rgba(0,0,0,.14),0 4px 8px rgba(0,0,0,.28); // Copied from Google Inbox
}
