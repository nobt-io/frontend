name: CI

on: [push]

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source-code
        uses: actions/checkout@v2

      - name: Install NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: 10.15

      - uses: actions/cache@v2
        name: Cache node_modules
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/yarn.lock') }}

      - uses: actions/cache@v2
        name: Cache cypress
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn

      - name: Check formatting
        run: yarn run prettier

      - name: Run linter
        run: yarn run lint

      - name: Run tests
        run: yarn run test

      - name: Build bundle
        run: yarn run build

      - name: Run UI tests
        run: cypress/run.sh

      - name: Upload snapshot archive
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: snapshots
          path: ./cypress/integration/__image_snapshots__

      - name: Upload video recordings
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: video-recordings
          path: ./cypress/videos

      - name: Upload generated bundle
        uses: actions/upload-artifact@v1
        with:
          name: dist
          path: ./dist

  notify_sentry:
    name: Notify Sentry about new deploy
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source-code
        uses: actions/checkout@v2

      - name: Install NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: 10.15

      - uses: actions/cache@v2
        name: Cache node_modules
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/yarn.lock') }}

      - uses: actions/cache@v2
        name: Cache cypress
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn

      - name: Build
        run: yarn build

      - name: Notify sentry about new release
        run: .sentry/new-release.sh
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

      - name: Notify sentry about new deployment
        run: .sentry/new-deployment.sh
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
